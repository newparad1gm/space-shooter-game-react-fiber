/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 scar.glb -t
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
	nodes: {
		Cube: THREE.Mesh
		Cube006: THREE.Mesh
		Cube009: THREE.Mesh
		Cube013: THREE.Mesh
		Cylinder002: THREE.Mesh
		Cylinder003: THREE.Mesh
		Cube008: THREE.Mesh
		Cube008_1: THREE.Mesh
		Cube008_2: THREE.Mesh
		Cube014: THREE.Mesh
		Cube012: THREE.Mesh
		Cylinder: THREE.Mesh
		Cylinder001: THREE.Mesh
		Cylinder004: THREE.Mesh
		Cube003_1: THREE.Mesh
		Cube003_2: THREE.Mesh
		Cube003: THREE.Mesh
		Cube001: THREE.Mesh
		Cube004: THREE.Mesh
		Cube005: THREE.Mesh
		Cube011: THREE.Mesh
		Cube010: THREE.Mesh
		Plane: THREE.Mesh
	}
	materials: {
		MAG: THREE.MeshStandardMaterial
		BLACK: THREE.MeshStandardMaterial
		MAIN1: THREE.MeshStandardMaterial
		MAIN2: THREE.MeshStandardMaterial
		FIRE: THREE.MeshStandardMaterial
		RELOAD: THREE.MeshStandardMaterial
		Material: THREE.MeshStandardMaterial
	}
}

interface ScarProps {
	group: React.RefObject<THREE.Group>;
}

export function Scar(props: ScarProps) {
	const { nodes, materials } = useGLTF('/gltf/scar.glb') as GLTFResult;
	const { group } = props;

	return (
		<group ref={group} dispose={null}>
			<mesh geometry={nodes.Cube.geometry} material={materials.MAG} position={[-0.22, -0.38, 0]} />
			<mesh geometry={nodes.Cube006.geometry} material={materials.BLACK} position={[0.72, 0.22, 0]} />
			<mesh geometry={nodes.Cube009.geometry} material={materials.MAIN1} position={[1.02, 0.34, 0]} />
			<mesh geometry={nodes.Cube013.geometry} material={materials.MAIN1} position={[-1.37, 0.25, 0]} />
			<mesh geometry={nodes.Cylinder002.geometry} material={materials.BLACK} position={[-0.95, 0.5, 0]} />
			<mesh geometry={nodes.Cylinder003.geometry} material={materials.BLACK} position={[-0.64, 0.2, 0]} rotation={[Math.PI / 2, 0, 0]} />
			<group position={[-0.1, 0.2, 0.02]}>
				<mesh geometry={nodes.Cube008.geometry} material={materials.MAIN1} />
				<mesh geometry={nodes.Cube008_1.geometry} material={materials.BLACK} />
				<mesh geometry={nodes.Cube008_2.geometry} material={materials.MAIN2} />
			</group>
			<mesh geometry={nodes.Cube014.geometry} material={materials.FIRE} position={[-0.63, -0.13, 0]} />
			<mesh geometry={nodes.Cube012.geometry} material={materials.BLACK} position={[0.11, 0.23, 0.08]} />
			<mesh geometry={nodes.Cylinder.geometry} material={materials.RELOAD} position={[0.31, 0.37, 0.14]} rotation={[Math.PI / 2, 0, 0]} />
			<mesh geometry={nodes.Cylinder001.geometry} material={materials.BLACK} position={[-1.01, 0.55, 0]} rotation={[0, 0.21, 0]} />
			<mesh geometry={nodes.Cylinder004.geometry} material={materials.BLACK} position={[-0.75, 0.06, 0.09]} rotation={[Math.PI / 2, 0, 0]} />
			<group position={[-2.33, 0.07, 0]}>
				<mesh geometry={nodes.Cube003_1.geometry} material={materials.MAIN1} />
				<mesh geometry={nodes.Cube003_2.geometry} material={materials.BLACK} />
			</group>
			<mesh geometry={nodes.Cube003.geometry} material={materials.MAIN1} position={[-0.95, -0.37, 0]} />
			<mesh geometry={nodes.Cube001.geometry} material={materials.BLACK} position={[1.59, 0.22, 0]} />
			<mesh geometry={nodes.Cube004.geometry} material={materials.BLACK} position={[-0.03, 0.47, 0]} />
			<mesh geometry={nodes.Cube005.geometry} material={materials.BLACK} position={[0.56, 0.12, 0]} />
			<mesh geometry={nodes.Cube011.geometry} material={materials.BLACK} position={[0.2, 0.38, 0]} />
			<mesh geometry={nodes.Cube010.geometry} material={materials.BLACK} position={[1.13, 0.4, 0]} />
		</group>
	)
}

useGLTF.preload('/scar.glb')
